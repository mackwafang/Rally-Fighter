<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_level_complete</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>fuelBonus = 0;
boostBonus = 0;
rankBonus = 0;
wait = 0;
totalBonus = rankBonus;
chooseNext = 0;
chooseBkg = 0;
word = 1;
difficultyBonus = max(1,global.startingDifficulty)+((global.level div 3)/5);
shine = 0;
surface = surface_create(sprite_width,sprite_height);
score += totalBonus;
alarm[0] = 60;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(health &gt; 0 || global.boost &gt; 0 || rankBonus &lt; round(500*(global.maxRank-global.placement))) {audio_play_sound(snd_bonus,1,false);}
if (health &gt; 0){
    health -= 1;
    fuelBonus += 25;
    totalBonus += 25;
}
else if (global.boost &gt; 0){
    global.boost -= 1;
    boostBonus += 30;
    totalBonus += 30;
}
else if (rankBonus &lt; round(500*(global.maxRank-global.placement))){
    rankBonus += 50;
    totalBonus += 50;
}
alarm[0] = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (shine &lt; 332) {
    shine += 2;
}
else {
    shine = -32;
}
if(health &lt;= 0 &amp;&amp; global.boost &lt;= 0 &amp;&amp; rankBonus == round(500*(global.maxRank-global.placement))){
    if(wait &gt;= 120){
        if(obj_control.blackFade &gt;= 90){
            surface_free(surface);
            global.level ++;
            score += round(totalBonus*difficultyBonus);
            global.difficulty = global.startingDifficulty+(global.level div 3)/5;
            global.goal = -((global.startingDifficulty*10000)/pixelDistance)*((global.level div 5)+1);
            obj_finish_line.y = global.goal;
            health = 100;
            global.boost = 100;
            global.distance = 0;
            chooseNext = irandom(2);
            chooseBkg = irandom(2);         
            global.weather = irandom(2);
            with(obj_car) {instance_destroy();}
            with(obj_misc) {instance_destroy();}
            with(obj_intersection) {instance_destroy();}
            if (instance_exists(obj_player)) {
                obj_player.prevMark[0] = -1;
                obj_player.prevMark[1] = -1;
            }
            if (instance_exists(obj_wave)) {with(obj_wave) {instance_destroy();}}
            if (instance_exists(obj_npc_racer)) {with(obj_npc_racer) {instance_destroy();}}
            if (instance_exists(obj_change_bkg)) {with(obj_change_bkg) {instance_destroy();}}
            /*switch(chooseNext){
                case 0: background_index[1] = bkg_road1;
                        global.isMedian = false;
                        background_x[3] = obj_wall.x+94;
                        break;
                case 1: if(global.isMedian){
                            background_index[1] = bkg_road2_m;
                        }
                        else{
                            background_index[1] = bkg_road2;
                        }
                        background_x[3] = obj_wall.x+145;
                        break;
                case 2: if(global.isMedian){
                            background_index[1] = bkg_road3_m;
                        }
                        else{
                            background_index[1] = bkg_road3;
                        }
                        background_x[3] = obj_wall.x+234;
                        break;
            }
            obj_wall2.x = background_x[3];*/
            switch(chooseBkg){
                case 0: background_index[0] = bkg_grass;
                        global.isBeach = false;
                        break;
                /*case 1: background_index[0] = bkg_water;
                        global.isBeach = false;
                        break;*/
                case 2: background_index[0] = bkg_sand;
                        global.isBeach = choose(true,false);
                        obj_control.beachSide = choose(-1,1);
                        break;
            }
            /*if(global.isBeach){
                for(i = -256; i &lt; room_height; i += 32){
                    if(obj_control.beachSide == 1){
                        with(instance_create(obj_wall2.x+32,i,obj_wave)){
                            image_index = (other.i/room_height)*19;
                        }
                    }
                    else{
                        with(instance_create(obj_wall.x-32,i,obj_wave)){
                            image_index = (other.i/room_height)*19;
                            image_xscale = -1;
                        }
                    }
                }
            }*/
            if (buffer_exists(global.saveBuffer)) {
                buffer_delete(global.saveBuffer);
            }
            instance_destroy();
            instance_create(0,0,obj_ready);
        }
        else{
            obj_control.blackFade ++;
        }
    }
    else{
        wait ++;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var xv,yv, wv, hv;
xv = view_xview[0];
yv = view_yview[0];
wv = view_wport[0];
hv = view_hport[0];
draw_set_font(global.gameFont);

if (surface_exists(surface)) {
    draw_surface(surface,(wv/2)-sprite_xoffset,200);
    surface_set_target(surface);
    draw_sprite(sprite_index,0,sprite_width/2,sprite_height/2);
    surface_reset_target();
    
    draw_set_colour_write_enable(1,1,1,0);
    surface_set_target(surface);
    draw_sprite(sprite_level_complete_shine,0,shine,sprite_height/2);
    surface_reset_target();
    draw_set_colour_write_enable(1,1,1,1);
}
else {
    surface = surface_create(sprite_width,sprite_height);
}
for(j = 0 ; j &lt; 3; j ++){
    draw_sprite(spr_finish_icon,j,(wv/2)-128,250+(j*32));
}
draw_set_valign(fa_top);
draw_set_halign(fa_right);
draw_text_transformed_colour((wv/2)+48,250,string(round(fuelBonus/25))+"x25= #"+string(round(boostBonus/30))+"x30= #"+ordinalNumber(global.placement+1)+"/"+string(global.maxRank)+"  #Bonus x#Total: ",2,2,0,white,white,white,white,1);
draw_set_halign(fa_left)
draw_text_transformed_colour((wv/2)+48,250,string(fuelBonus)+"#"+string(boostBonus)+"#"+string(rankBonus)+"#"+string(difficultyBonus)+"#"+string(round(totalBonus*difficultyBonus)),2,2,0,white,white,white,white,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
