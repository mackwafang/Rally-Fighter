<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_car</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_kinetic</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dir = 1;
if(health &lt; 30 &amp;&amp; irandom(100+health) &lt;= 3){
    if(dir == 1){
        instance_create(x,y,obj_fuel);
        instance_destroy();
    }
}
else if(irandom(500) &lt; 1){
    instance_create(x,y,obj_fuel);
    instance_destroy();
}
if(irandom(49) &lt; 1){
    instance_destroy();
    instance_create(x,y,obj_truck);
}
spd = random_range(global.difficulty*5,global.difficulty*6)*dir;
if (global.level &gt; 1) {carType = irandom(3);} else {carType = 0;}
carShadow = irandom(2);
carColor = white;
condition = 10;
boost = false;
friction = 0.05;
bump = 0;
bumpScore = 0;
waitBump = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = -x;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>y += background_vspeed[0]-spd;
if(y &gt; room_height+50 || y &lt; -100) {instance_destroy();}
image_angle = -hspeed*6*dir;
/************** Remove Bump bonus ***************/
if(bump &gt; 0){
    if(waitBump &lt; 120){
        waitBump++;
    }
    else{
        bump = 0;
    }
}
bumpScore = (bump*25)+50;
/************** Move to block passing ***************/
var minTo, maxTo;
switch(getRoadWidth(obj_road.image_index)) {
    case 0:
        minTo = -46;
        maxTo = 46;
        break;
    case 1:
        minTo = -70;
        maxTo = 46;
        break;
    case -1:
        minTo = -46;
        maxTo = 70;
        break;
    case 2:
        minTo = -94;
        maxTo = 46;
        break;
    case -2:
        minTo = -46;
        maxTo = 94;
        break;
    case 3:
        minTo = -148;
        maxTo = -48;
        break;
    case -3:
        minTo = 48;
        maxTo = 148;
        break;
}
var goTo = roadInitialX+irandom_range(minTo,maxTo);
if (!place_meeting(x,y,obj_road)) {
    hspeed += sign(goTo-x)*0.1;
}
else {
    if(carType &gt; 0){
        if (collision_rectangle(x+6,y+10,x+32,y+40+(spd*2),obj_kinetic,false,true) || collision_rectangle(x-32,y-10,x-6,y-40-(spd*2),obj_kinetic,false,true)){
            hspeed += 0.1;
        }
        if (collision_rectangle(x-32,y+10,x-6,y+40+(spd*2),obj_kinetic,false,true) || collision_rectangle(x+6,y-10,x+32,y-40-(spd*2),obj_kinetic,false,true)){
            hspeed -= 0.1;
        }
    }
}
/*************** Destroyed *************/
if(condition &lt;= 0){
    instance_destroy();
    instance_create(x,y,obj_explosion);
    if(bump){
        score += 150;
        with(instance_create(x,y,obj_score_ind)){
            word = "150";
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_truck">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(dir == 1){
    move_contact_solid(direction,1);
    condition -= abs(hspeed)+2;
    other.condition -= abs(hspeed)+2;
    if(bump &gt; 0){
        bump ++;
        score += bumpScore;
        with(instance_create(x,y,obj_score_ind)){
            word = string(other.bumpScore);
        }
    }
    if (spd &lt; other.spd){
        if(y &lt; other.y+8 || y &gt; other.y-8){
            hspeed = (x-other.x)/2;
            other.hspeed = -(x-other.x)/2;
            spd += 1;
            other.spd -= 1;
        }
        else{
            hspeed = other.hspeed*1.5;
            other.hspeed *= -1.5;
        }
    }
}
else{
    condition = 0;
    other.condition = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_car">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(dir == 1){
    move_contact_solid(direction,1);
    condition -= abs(hspeed)+2;
    other.condition -= abs(hspeed)+2;
    if(bump &gt; 0){
        bump ++;
        score += bumpScore;
        with(instance_create(x,y,obj_score_ind)){
            word = string(other.bumpScore);
        }
    }
    if (spd &lt; other.spd){
        if(y &lt; other.y+8 || y &gt; other.y-8){
            hspeed = (x-other.x)/2;
            spd += 1;
            other.spd -= 1;
        }
        else{
            hspeed = other.hspeed*1.5;
        }
    }
}
else{
    condition = 0;
    other.condition = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_npc_racer">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(dir == 1){
    move_contact_solid(direction,1);
    condition -= abs(hspeed)+2;
    other.condition -= abs(hspeed)+2;
    if(bump &gt; 0){
        bump ++;
        score += bumpScore;
        with(instance_create(x,y,obj_score_ind)){
            word = string(other.bumpScore);
        }
    }
    if (spd &lt; other.spd){
        if(y &lt; other.y+8 || y &gt; other.y-8){
            hspeed = (x-other.x)/2;
            other.hspeed = -(x-other.x)/2;
            spd += 0.5;
            other.spd -= 0.5;
        }
        else{
            hspeed = other.hspeed*1.5;
            other.hspeed *= -1.5;
        }
    }
}
else{
    condition = 0;
    other.condition = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_wall2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>move_contact_solid(direction,1);
hspeed *= -0.5;
condition -= 2+abs(hspeed)*2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_wall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>move_contact_solid(direction,1);
hspeed *= -0.5;
condition -= 2+abs(hspeed)*2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_player">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>move_contact_solid(direction,3);
if(dir == 1){
    condition -= abs(hspeed)+2;
    if(other.invisi &lt;= 0){
        other.condition -= abs(hspeed)+1+global.difficulty;
    }
    bump ++;
    score += bumpScore;
    with(instance_create(x,y,obj_score_ind)){
        word = string(other.bumpScore);
    }
    if (spd &lt; other.spd){
        if(y &lt; other.y+8){
            hspeed = (x-other.x)/2;
            other.hspeed = -(x-other.x)/2;
            spd += 0.5;
            other.spd -= 0.5;
        }
        else if (y &gt; other.y-8){
            hspeed = (x-other.x)/2;
            other.hspeed = -(x-other.x)/2;
            spd += 0.5;
            other.spd -= 0.5;
        }
        else{
            hspeed = other.hspeed*1.5;
            other.hspeed *= -1.5;
        }
    }
}
else{
    condition = 0;
    other.condition = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_car(spr_car,carType);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
