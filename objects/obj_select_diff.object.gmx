<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>chooseDiff = 1;
for(i = 0; i &lt; 3; i++){
    diffRoll[i] = 0;
}
howFade = 180;
message = 0;
messageString = "";
display_set_gui_size(view_wport,view_hport);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>view_wview = var_wipe(view_wview,240,100,0.05,0);
view_hview = var_wipe(view_hview,320,100,0.05,0);
view_xview = var_wipe(view_xview,0,100,0.05,0);
view_yview = var_wipe(view_yview,0,100,0.05,0);
if(keyboard_check_pressed(ord("Z"))) {
    global.startingDifficulty = chooseDiff;
    instance_create(x,y,obj_select_vehicle_type);
    instance_destroy();
}
if(keyboard_check_pressed(vk_up)) {chooseDiff += 0.5;}
if(keyboard_check_pressed(vk_down)) {chooseDiff -= 0.5;}
if(chooseDiff &gt; 2.5){
    chooseDiff = 0.5;
}
else if(chooseDiff &lt; 0.5){
    chooseDiff = 2.5;
}
if(howFade &lt; 180){
    howFade ++;
}
else{
    howFade = 0;
    switch(message){
        case 0: message = 1;
                messageString = "Press &lt;Z&gt; to Start";
                break;
        case 1: message = 0;
                messageString = "Press &lt;Up&gt; and &lt;Down&gt; to select.";
                break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var wv, hv, xv, yv;
xv = view_xview[0];
yv = view_yview[0];
hv = view_hport[0];
wv = view_wport[0];

draw_set_font(global.gameFont);
draw_set_valign(fa_center);
draw_set_halign(fa_middle);
draw_text_transformed_colour(wv/2,(hv/4),"Select#Difficulty",4,4,0,white,white,white,white,1);
draw_set_valign(fa_bottom)
draw_text_transformed_colour(wv/2,(hv/2)-10,"Level",2,2,0,white,white,white,white,1);
for(i = 0; i &lt; 3; i++){
    if (i == 0) {
        diffRoll[0] = var_wipe(diffRoll[0],floor(chooseDiff/power(10,-2)),100,0,0.25);
    }
    else {
        diffRoll[i] = var_wipe(diffRoll[i],floor(diffRoll[i-1]) div 10,100,0,0.25);
    }
    draw_sprite_ext(spr_odometer,21+diffRoll[i]*21,(wv/2)+16-(i*32),(hv/2)-10,2,2,0,white,1)
}
var diffString, diffColor;
switch(chooseDiff){
    case 0.5: diffString = "Cruisin'";
              diffColor = white;
              break;
    case 1: diffString = "Driver"
            diffColor = yellow;
            break;
    case 1.5: diffString = "Expert Driver"
              diffColor = yellow;
              break;
    case 2: diffString = "Experter Driver"
            diffColor = orange;
            break;
    case 2.5: diffString = "Cops vs. Robbers"
              diffColor = red;
              break;
}
draw_set_valign(fa_top);
draw_text_transformed_colour(wv/2,(hv/2)+48,diffString,3,3,0,diffColor,diffColor,diffColor,diffColor,1);
var alpha;
alpha = min(abs(sin(degtorad(howFade))*5),1);
draw_rectangle_colour(0,hv-64,wv,hv,0,0,0,0,false);
draw_set_valign(fa_center);
draw_text_ext_transformed_colour(wv/2,(hv-32),messageString,12,200,2,2,0,white,white,white,white,alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(spr_car_shadow,0,x,y);
draw_sprite(spr_player,0,x,y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
