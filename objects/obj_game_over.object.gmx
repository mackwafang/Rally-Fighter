<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>obj_control.visible = false;
for(a = 0; a &lt; 8 ; a ++) {scoreMove[a] = 0;}
for(b = 0; b &lt; 6; b ++) {totalDistance[b] = 0;}
for(c = 0; c &lt; 4; c ++) {time[c] = 0;}
for(i = 0; i &lt; string_length("Game Over"); i++){
    size[i] = 10;
    jump[i] = 0;
}
loseType = 0;
word = 1;
alpha = 1;
color = red;
timePlayed = global.time;
scoreEarned = score;
distanceTraveled = global.totalDistance;
goBack = 360;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var xv,yv, wv, hv;
xv = view_xview[0];
yv = view_yview[0];
wv = view_wport[0];
hv = view_hport[0];
draw_rectangle_colour(0,hv,wv,hv-64,0,0,0,0,false);
draw_set_font(global.gameFont);
draw_set_valign(fa_center);
draw_set_halign(fa_middle);
for(i = 0; i &lt; word; i++){
    var jump_formula, jump_speed, pitch, max_alpha, appear_rate;
    jump_speed = 10; //Jump speed, higher = faster
    pitch = 20; //How high the letter will jump.
    jump_formula[i] = sin(degtorad(-jump[i]*jump_speed)+(pi))*pitch; //Jump formula
    max_alpha[i] = round(radtodeg((arccos(degtorad(0))+(pi))/jump_speed));
    if jump[i] != round(radtodeg((arccos(degtorad(0))+(pi))/jump_speed)){ //Check if jump_formula keeps on increasing aka solve for y=0
        jump[i] += 1;
        if size[i] &gt; 4{
            size[i] -= 0.2;
        }
    }
    if jump[i] == round(radtodeg(arccos(0)+(pi/jump_speed))/jump_speed){
        if word &lt; string_length(string("Game Over")){
            word += 1; //Check create event
        }
    }
    draw_text_transformed_colour(70+(i*40),200,string_char_at(string("Game Over"),i+1),size[i],size[i],0,color,color,color,color,alpha);
}
var loseString;
switch(loseType){
    case 0: loseString = "Out of fuel"; break;
    case 1: loseString = "You placed"; break;
}
draw_text_transformed_colour(wv/2,256,loseString,2,2,0,white,white,white,white,1);
draw_set_valign(fa_top);
draw_set_halign(fa_right);
draw_text_transformed_colour(wv/2,272,"Time:#Traveled #Score:",2,2,0,white,white,white,white,1);
draw_text_transformed_colour((wv/2)+155,304,". KM",2,2,0,white,white,white,white,1);
/******** SCORE ********/
for(a = 0; a &lt; 8 ; a ++){
    if(a == 0){
        scoreMove[0] = var_wipe(scoreMove[0],floor(scoreEarned),100,0.1,0);
    }
    else{
        scoreMove[a] = var_wipe(scoreMove[a],round(scoreMove[a-1]) div 10,100,0.1,0);
    }
    //scoreMove[a] = var_wipe(scoreMove[a],floor(scoreEarned/power(10,7-a)),100,0.05,0);
    draw_sprite(spr_odometer,22+scoreMove[a]*22,(wv/2)+112-(a*14),342);
}
/******** DISTANCE ********/
for(b = 0; b &lt; 5; b ++){
    totalDistance[b] = var_wipe(totalDistance[b],floor((distanceTraveled mod 10)/power(10,4-b)),100,0.05,0);
    draw_sprite(spr_odometer,22+totalDistance[b]*22,(wv/2)+8+(b*14),311);
}
totalDistance[5] = var_wipe(totalDistance[5],floor((distanceTraveled mod 10)/power(10,-1)),100,0.05,0);
draw_sprite(spr_odometer,22+totalDistance[5]*22,(wv/2)+90,311);
/******** MINUTES ********/
draw_set_halign(fa_left);
draw_text_transformed_colour(wv/2,272,string(timePlayed div 3600)+":"+script_digit((timePlayed div 60) mod 60,2),2,2,0,white,white,white,white,1);
if(goBack &lt;= 0){
    room_goto(rm_title);
    score = 0;
}
else{
    goBack--;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
